package GUI.SCAV;

import controlAutomatico.ControlAutomatico;
import controlAutomatico.EstadoSCAV;
import controlVelocidad.EstadoMotor;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;

/**
 *
 * @author alex
 */
public class ControlesSCAV extends JPanel implements Observer {
    private ControlAutomatico scav;
    private EstadoSCAV estado;
    
    /**
     * Creates new form ControlesSCAV
     */
    public ControlesSCAV() {
        initComponents();
        estado = EstadoSCAV.APAGADO;
        
        buttonGroup.add(boton_acelerar);
        buttonGroup.add(boton_mantener);
        buttonGroup.add(boton_reiniciar);     
        
//        motorApagado();
    }
    
    
    public void setObservable(ControlAutomatico obs) {
        scav = obs;
        scav.addObserver(this);
    }

    /**
     * Método que cambia el estado del SCAV. Este método debe llarmase en los 
     * métodos que manejan los botones.
     */
    private void cambiarEstado(EstadoSCAV e) {
        estado = e;
        scav.setEstado(estado);
        estadoLabel.setText(estado.toString());
    }
    
    /**
     * Desactiva los controles del SCAV cuando el motor está apagado.
     */
    private void motorApagado() {
        estado = EstadoSCAV.APAGADO;
        estadoLabel.setText(estado.toString());

        boton_encender.setEnabled(false);
        boton_acelerar.setEnabled(false);
        boton_mantener.setEnabled(false);
        boton_reiniciar.setEnabled(false);
    }
    
     /**
     *  Activa los controles del SCAV cuando el motor está encendido.
     */
    private void motorEncendido() {
        boton_encender.setEnabled(true);
        boton_acelerar.setEnabled(true);
        boton_mantener.setEnabled(true);
        boton_reiniciar.setEnabled(true);
    }
    
    
    @Override
    public void update(Observable o, Object arg) {
        estado = scav.getEstado();
        
        if (estado == EstadoSCAV.APAGADO)
            apagarSCAV();
    
//        System.out.println(scav.getEstadoMotor());

        if(scav.getEstadoMotor().equals(EstadoMotor.APAGADO))
            motorApagado();
        else
            motorEncendido();
    }
    
    private void apagarSCAV() {
        estadoLabel.setText(estado.toString());
        boton_encender.setText("ENCENDER");
        boton_encender.setSelected(false);
        boton_acelerar.setEnabled(false);
        boton_mantener.setEnabled(false);
        boton_reiniciar.setEnabled(false);
        buttonGroup.clearSelection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        estadoLabel = new javax.swing.JLabel();
        panelBotones = new javax.swing.JPanel();
        boton_encender = new javax.swing.JToggleButton();
        boton_acelerar = new javax.swing.JToggleButton();
        boton_mantener = new javax.swing.JToggleButton();
        boton_reiniciar = new javax.swing.JToggleButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Control Automático"));
        setLayout(new java.awt.GridLayout(2, 1));

        estadoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        estadoLabel.setText("ESTADO");
        estadoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(estadoLabel);

        panelBotones.setLayout(new java.awt.GridLayout());

        boton_encender.setText("ENCENDER");
        boton_encender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_encenderActionPerformed(evt);
            }
        });
        panelBotones.add(boton_encender);

        boton_acelerar.setText("ACELERAR");
        boton_acelerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_acelerarActionPerformed(evt);
            }
        });
        panelBotones.add(boton_acelerar);

        boton_mantener.setText("MANTENER");
        boton_mantener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_mantenerActionPerformed(evt);
            }
        });
        panelBotones.add(boton_mantener);

        boton_reiniciar.setText("REINICIAR");
        boton_reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_reiniciarActionPerformed(evt);
            }
        });
        panelBotones.add(boton_reiniciar);

        add(panelBotones);
    }// </editor-fold>//GEN-END:initComponents

    private void boton_encenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_encenderActionPerformed
        if (estado.equals(EstadoSCAV.APAGADO)) {
            boton_encender.setText("APAGAR");
            boton_acelerar.setEnabled(true);
            boton_mantener.setEnabled(true);
            boton_reiniciar.setEnabled(true);
            cambiarEstado(EstadoSCAV.ENCENDIDO);
        }
        else {
            apagarSCAV();
            cambiarEstado(EstadoSCAV.APAGADO);
        }
    }//GEN-LAST:event_boton_encenderActionPerformed

    private void boton_acelerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_acelerarActionPerformed
        cambiarEstado(EstadoSCAV.ACELERAR);
    }//GEN-LAST:event_boton_acelerarActionPerformed

    private void boton_mantenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_mantenerActionPerformed
        cambiarEstado(EstadoSCAV.MANTENER);
        estadoLabel.setText(estado.toString() + " " + scav.getVelocidadGuardada() + " Km/h");
    }//GEN-LAST:event_boton_mantenerActionPerformed

    private void boton_reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_reiniciarActionPerformed
        cambiarEstado(EstadoSCAV.REINICIAR);
        estadoLabel.setText(estado.toString() + " " + scav.getVelocidadGuardada() + " Km/h");
    }//GEN-LAST:event_boton_reiniciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton boton_acelerar;
    private javax.swing.JToggleButton boton_encender;
    private javax.swing.JToggleButton boton_mantener;
    private javax.swing.JToggleButton boton_reiniciar;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel estadoLabel;
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables

}
